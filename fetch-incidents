#!/bin/bash
# This is a terrible, brittle way to extract data from an HTML page, but hey,
# it works and was quick to write.Â  When it breaks and annoys me too much, I'll
# do it properly with a real HTML parser.
#
set -e -o pipefail

if [[ $# -gt 0 ]]; then
    date="${1//\//%2F}"
    url="https://web.seattle.gov/sfd/realtime911/getRecsForDatePub.asp?incDate=$date&rad1=des"
    state=closed
else
    url='https://web.seattle.gov/sfd/realtime911/getRecsForDatePub.asp?action=Today&rad1=des'
    state=active
fi

# Header row
paste -s <<.
timestamp
incident_number
level
units
location
incident_type
.

# Active incidents
curl -fsS "$url" \
    | grep -E 'td[^>]+\b'"$state"'\b' \
    | perl -nE '/>\s*(.*)\s*<\/td>\s*$/ and say $1' \
    | perl -nE 'chomp; push @lines, $_; say(join "\t", @lines), @lines = () if $. % 6 == 0 or eof;'
